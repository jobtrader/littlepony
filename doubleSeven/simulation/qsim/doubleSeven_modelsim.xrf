vendor_name = ModelSim
source_file = 1, C:/altera/13.1/doubleSeven/counter_debounce.vhd
source_file = 1, C:/altera/13.1/doubleSeven/binary_counter.vhd
source_file = 1, C:/altera/13.1/doubleSeven/debounce_switch.vhd
source_file = 1, C:/altera/13.1/doubleSeven/seven.vhd
source_file = 1, C:/altera/13.1/doubleSeven/output_files/test.vwf
source_file = 1, C:/altera/13.1/doubleSeven/output_files/output_files/tesw2.vwf
source_file = 1, C:/altera/13.1/doubleSeven/seven2.vhd
source_file = 1, C:/altera/13.1/doubleSeven/output_files/output_files/output_files/binary_counter2.vhd
source_file = 1, C:/altera/13.1/doubleSeven/db/doubleSeven.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = counter_debounce
instance = comp, \Carry~output , Carry~output, counter_debounce, 1
instance = comp, \output2[0]~output , output2[0]~output, counter_debounce, 1
instance = comp, \output2[1]~output , output2[1]~output, counter_debounce, 1
instance = comp, \output2[2]~output , output2[2]~output, counter_debounce, 1
instance = comp, \output2[3]~output , output2[3]~output, counter_debounce, 1
instance = comp, \output2[4]~output , output2[4]~output, counter_debounce, 1
instance = comp, \output2[5]~output , output2[5]~output, counter_debounce, 1
instance = comp, \output2[6]~output , output2[6]~output, counter_debounce, 1
instance = comp, \output3[0]~output , output3[0]~output, counter_debounce, 1
instance = comp, \output3[1]~output , output3[1]~output, counter_debounce, 1
instance = comp, \output3[2]~output , output3[2]~output, counter_debounce, 1
instance = comp, \output3[3]~output , output3[3]~output, counter_debounce, 1
instance = comp, \output3[4]~output , output3[4]~output, counter_debounce, 1
instance = comp, \output3[5]~output , output3[5]~output, counter_debounce, 1
instance = comp, \output3[6]~output , output3[6]~output, counter_debounce, 1
instance = comp, \clk~input , clk~input, counter_debounce, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, counter_debounce, 1
instance = comp, \In_put~input , In_put~input, counter_debounce, 1
instance = comp, \U1|inff[0] , U1|inff[0], counter_debounce, 1
instance = comp, \U1|inff[1]~feeder , U1|inff[1]~feeder, counter_debounce, 1
instance = comp, \U1|inff[1] , U1|inff[1], counter_debounce, 1
instance = comp, \U1|count[0]~16 , U1|count[0]~16, counter_debounce, 1
instance = comp, \U1|process_0~0 , U1|process_0~0, counter_debounce, 1
instance = comp, \U1|count[0] , U1|count[0], counter_debounce, 1
instance = comp, \U1|count[1]~18 , U1|count[1]~18, counter_debounce, 1
instance = comp, \U1|count[1] , U1|count[1], counter_debounce, 1
instance = comp, \U1|count[2]~20 , U1|count[2]~20, counter_debounce, 1
instance = comp, \U1|count[2] , U1|count[2], counter_debounce, 1
instance = comp, \U1|count[3]~22 , U1|count[3]~22, counter_debounce, 1
instance = comp, \U1|count[3] , U1|count[3], counter_debounce, 1
instance = comp, \U1|count[4]~24 , U1|count[4]~24, counter_debounce, 1
instance = comp, \U1|count[4] , U1|count[4], counter_debounce, 1
instance = comp, \U1|count[5]~26 , U1|count[5]~26, counter_debounce, 1
instance = comp, \U1|count[5] , U1|count[5], counter_debounce, 1
instance = comp, \U1|count[6]~28 , U1|count[6]~28, counter_debounce, 1
instance = comp, \U1|count[6] , U1|count[6], counter_debounce, 1
instance = comp, \U1|count[7]~30 , U1|count[7]~30, counter_debounce, 1
instance = comp, \U1|count[7] , U1|count[7], counter_debounce, 1
instance = comp, \U1|count[8]~32 , U1|count[8]~32, counter_debounce, 1
instance = comp, \U1|count[8] , U1|count[8], counter_debounce, 1
instance = comp, \U1|count[9]~34 , U1|count[9]~34, counter_debounce, 1
instance = comp, \U1|count[9] , U1|count[9], counter_debounce, 1
instance = comp, \U1|count[10]~36 , U1|count[10]~36, counter_debounce, 1
instance = comp, \U1|count[10] , U1|count[10], counter_debounce, 1
instance = comp, \U1|count[11]~38 , U1|count[11]~38, counter_debounce, 1
instance = comp, \U1|count[11] , U1|count[11], counter_debounce, 1
instance = comp, \U1|count[12]~40 , U1|count[12]~40, counter_debounce, 1
instance = comp, \U1|count[12] , U1|count[12], counter_debounce, 1
instance = comp, \U1|count[13]~42 , U1|count[13]~42, counter_debounce, 1
instance = comp, \U1|count[13] , U1|count[13], counter_debounce, 1
instance = comp, \U1|count[14]~44 , U1|count[14]~44, counter_debounce, 1
instance = comp, \U1|count[14] , U1|count[14], counter_debounce, 1
instance = comp, \U1|count[15]~46 , U1|count[15]~46, counter_debounce, 1
instance = comp, \U1|count[15] , U1|count[15], counter_debounce, 1
instance = comp, \U1|LessThan0~0 , U1|LessThan0~0, counter_debounce, 1
instance = comp, \U1|keepResult~0 , U1|keepResult~0, counter_debounce, 1
instance = comp, \U1|keepResult~1 , U1|keepResult~1, counter_debounce, 1
instance = comp, \U1|keepResult~2 , U1|keepResult~2, counter_debounce, 1
instance = comp, \U1|keepResult~3 , U1|keepResult~3, counter_debounce, 1
instance = comp, \U1|keepResult~feeder , U1|keepResult~feeder, counter_debounce, 1
instance = comp, \U1|keepResult , U1|keepResult, counter_debounce, 1
instance = comp, \U1|keepResult~clkctrl , U1|keepResult~clkctrl, counter_debounce, 1
instance = comp, \U0|m0[0]~3 , U0|m0[0]~3, counter_debounce, 1
instance = comp, \CLR~input , CLR~input, counter_debounce, 1
instance = comp, \U2|inff[0]~feeder , U2|inff[0]~feeder, counter_debounce, 1
instance = comp, \U2|inff[0] , U2|inff[0], counter_debounce, 1
instance = comp, \U2|inff[1]~feeder , U2|inff[1]~feeder, counter_debounce, 1
instance = comp, \U2|inff[1] , U2|inff[1], counter_debounce, 1
instance = comp, \U2|count[0]~16 , U2|count[0]~16, counter_debounce, 1
instance = comp, \U2|process_0~0 , U2|process_0~0, counter_debounce, 1
instance = comp, \U2|count[0] , U2|count[0], counter_debounce, 1
instance = comp, \U2|count[1]~18 , U2|count[1]~18, counter_debounce, 1
instance = comp, \U2|count[1] , U2|count[1], counter_debounce, 1
instance = comp, \U2|count[2]~20 , U2|count[2]~20, counter_debounce, 1
instance = comp, \U2|count[2] , U2|count[2], counter_debounce, 1
instance = comp, \U2|count[3]~22 , U2|count[3]~22, counter_debounce, 1
instance = comp, \U2|count[3] , U2|count[3], counter_debounce, 1
instance = comp, \U2|count[4]~24 , U2|count[4]~24, counter_debounce, 1
instance = comp, \U2|count[4] , U2|count[4], counter_debounce, 1
instance = comp, \U2|count[5]~26 , U2|count[5]~26, counter_debounce, 1
instance = comp, \U2|count[5] , U2|count[5], counter_debounce, 1
instance = comp, \U2|count[6]~28 , U2|count[6]~28, counter_debounce, 1
instance = comp, \U2|count[6] , U2|count[6], counter_debounce, 1
instance = comp, \U2|count[7]~30 , U2|count[7]~30, counter_debounce, 1
instance = comp, \U2|count[7] , U2|count[7], counter_debounce, 1
instance = comp, \U2|count[8]~32 , U2|count[8]~32, counter_debounce, 1
instance = comp, \U2|count[8] , U2|count[8], counter_debounce, 1
instance = comp, \U2|count[9]~34 , U2|count[9]~34, counter_debounce, 1
instance = comp, \U2|count[9] , U2|count[9], counter_debounce, 1
instance = comp, \U2|count[10]~36 , U2|count[10]~36, counter_debounce, 1
instance = comp, \U2|count[10] , U2|count[10], counter_debounce, 1
instance = comp, \U2|count[11]~38 , U2|count[11]~38, counter_debounce, 1
instance = comp, \U2|count[11] , U2|count[11], counter_debounce, 1
instance = comp, \U2|count[12]~40 , U2|count[12]~40, counter_debounce, 1
instance = comp, \U2|count[12] , U2|count[12], counter_debounce, 1
instance = comp, \U2|count[13]~42 , U2|count[13]~42, counter_debounce, 1
instance = comp, \U2|count[13] , U2|count[13], counter_debounce, 1
instance = comp, \U2|count[14]~44 , U2|count[14]~44, counter_debounce, 1
instance = comp, \U2|count[14] , U2|count[14], counter_debounce, 1
instance = comp, \U2|count[15]~46 , U2|count[15]~46, counter_debounce, 1
instance = comp, \U2|count[15] , U2|count[15], counter_debounce, 1
instance = comp, \U2|LessThan0~0 , U2|LessThan0~0, counter_debounce, 1
instance = comp, \U2|keepResult~0 , U2|keepResult~0, counter_debounce, 1
instance = comp, \U2|keepResult~1 , U2|keepResult~1, counter_debounce, 1
instance = comp, \U2|keepResult~2 , U2|keepResult~2, counter_debounce, 1
instance = comp, \U2|keepResult~3 , U2|keepResult~3, counter_debounce, 1
instance = comp, \U2|keepResult , U2|keepResult, counter_debounce, 1
instance = comp, \U0|m0[0] , U0|m0[0], counter_debounce, 1
instance = comp, \U0|m0[2]~1 , U0|m0[2]~1, counter_debounce, 1
instance = comp, \U0|m0[2] , U0|m0[2], counter_debounce, 1
instance = comp, \U0|m0[1]~0 , U0|m0[1]~0, counter_debounce, 1
instance = comp, \U0|m0[1] , U0|m0[1], counter_debounce, 1
instance = comp, \U0|m0[3]~2 , U0|m0[3]~2, counter_debounce, 1
instance = comp, \U0|m0[3] , U0|m0[3], counter_debounce, 1
instance = comp, \U0|a[3]~feeder , U0|a[3]~feeder, counter_debounce, 1
instance = comp, \U0|a[3] , U0|a[3], counter_debounce, 1
instance = comp, \U0|a[0] , U0|a[0], counter_debounce, 1
instance = comp, \U0|a[1] , U0|a[1], counter_debounce, 1
instance = comp, \U0|a[2]~feeder , U0|a[2]~feeder, counter_debounce, 1
instance = comp, \U0|a[2] , U0|a[2], counter_debounce, 1
instance = comp, \U3|Mux6~0 , U3|Mux6~0, counter_debounce, 1
instance = comp, \U3|Mux5~0 , U3|Mux5~0, counter_debounce, 1
instance = comp, \U3|Mux4~0 , U3|Mux4~0, counter_debounce, 1
instance = comp, \U3|Mux3~0 , U3|Mux3~0, counter_debounce, 1
instance = comp, \U3|Mux2~0 , U3|Mux2~0, counter_debounce, 1
instance = comp, \U3|Mux1~0 , U3|Mux1~0, counter_debounce, 1
instance = comp, \U3|Mux0~0 , U3|Mux0~0, counter_debounce, 1
instance = comp, \U0|m1[0]~3 , U0|m1[0]~3, counter_debounce, 1
instance = comp, \U0|Equal0~0 , U0|Equal0~0, counter_debounce, 1
instance = comp, \U0|m1[0] , U0|m1[0], counter_debounce, 1
instance = comp, \U0|m1[2]~1 , U0|m1[2]~1, counter_debounce, 1
instance = comp, \U0|m1[2] , U0|m1[2], counter_debounce, 1
instance = comp, \U0|m1[3]~2 , U0|m1[3]~2, counter_debounce, 1
instance = comp, \U0|m1[3] , U0|m1[3], counter_debounce, 1
instance = comp, \U0|m1[1]~0 , U0|m1[1]~0, counter_debounce, 1
instance = comp, \U0|m1[1] , U0|m1[1], counter_debounce, 1
instance = comp, \U0|b[1]~feeder , U0|b[1]~feeder, counter_debounce, 1
instance = comp, \U0|b[1] , U0|b[1], counter_debounce, 1
instance = comp, \U0|b[3] , U0|b[3], counter_debounce, 1
instance = comp, \U0|b[2]~feeder , U0|b[2]~feeder, counter_debounce, 1
instance = comp, \U0|b[2] , U0|b[2], counter_debounce, 1
instance = comp, \U0|b[0]~feeder , U0|b[0]~feeder, counter_debounce, 1
instance = comp, \U0|b[0] , U0|b[0], counter_debounce, 1
instance = comp, \U4|Mux6~0 , U4|Mux6~0, counter_debounce, 1
instance = comp, \U4|Mux5~0 , U4|Mux5~0, counter_debounce, 1
instance = comp, \U4|Mux4~0 , U4|Mux4~0, counter_debounce, 1
instance = comp, \U4|Mux3~0 , U4|Mux3~0, counter_debounce, 1
instance = comp, \U4|Mux2~0 , U4|Mux2~0, counter_debounce, 1
instance = comp, \U4|Mux1~0 , U4|Mux1~0, counter_debounce, 1
instance = comp, \U4|Mux0~0 , U4|Mux0~0, counter_debounce, 1
